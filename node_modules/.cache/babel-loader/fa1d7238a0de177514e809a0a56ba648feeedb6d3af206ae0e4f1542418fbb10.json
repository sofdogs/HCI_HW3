{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaschnurrenberger/Desktop/HCI_HW3/client/src/drop-box-login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DropdownSelector({\n  patients\n}) {\n  _s();\n  const [selectedValue, setSelectedValue] = useState('');\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n  };\n  // Example inline CSS styles\n  const divStyle = {\n    textAlign: 'center',\n    // Center align the dropdown\n    marginTop: '20px' // Add some space at the top\n  };\n  const selectStyle = {\n    width: '250px',\n    // Set a specific width for the dropdown\n    padding: '10px',\n    // Add some padding inside the dropdown\n    backgroundColor: '#f1f1f1',\n    // Light grey background\n    border: '1px solid #ddd',\n    // Light grey border\n    borderRadius: '5px',\n    // Rounded corners\n    textAlign: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: divStyle,\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedValue,\n      onChange: handleChange,\n      style: selectStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), patients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: patient.id,\n        children: patient.name\n      }, patient.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n_s(DropdownSelector, \"jGy9vz42uNA8vwm/uxQ7PTRqf3s=\");\n_c = DropdownSelector;\nexport default DropdownSelector;\nvar _c;\n$RefreshReg$(_c, \"DropdownSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DropdownSelector","patients","_s","selectedValue","setSelectedValue","handleChange","event","target","value","divStyle","textAlign","marginTop","selectStyle","width","padding","backgroundColor","border","borderRadius","style","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","patient","id","name","_c","$RefreshReg$"],"sources":["/Users/sofiaschnurrenberger/Desktop/HCI_HW3/client/src/drop-box-login.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\n\n  function DropdownSelector({ patients }) {\n    const [selectedValue, setSelectedValue] = useState('');\n  \n    const handleChange = (event) => {\n      setSelectedValue(event.target.value);\n    };\n      // Example inline CSS styles\n    const divStyle = {\n      textAlign: 'center', // Center align the dropdown\n      marginTop: '20px', // Add some space at the top\n    };\n\n    const selectStyle = {\n      width: '250px', // Set a specific width for the dropdown\n      padding: '10px', // Add some padding inside the dropdown\n      backgroundColor: '#f1f1f1', // Light grey background\n      border: '1px solid #ddd', // Light grey border\n      borderRadius: '5px', // Rounded corners\n      textAlign: 'center',\n    };\n  \n    return (\n      <div style={divStyle}>\n        <select value={selectedValue} onChange={handleChange} style={selectStyle}>\n          <option value=\"\">Select a patient</option>\n          {patients.map((patient) => (\n            <option key={patient.id} value={patient.id}>{patient.name}</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n  \n  export default DropdownSelector;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItC,SAASC,gBAAgBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMQ,YAAY,GAAIC,KAAK,IAAK;IAC9BF,gBAAgB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EACC;EACF,MAAMC,QAAQ,GAAG;IACfC,SAAS,EAAE,QAAQ;IAAE;IACrBC,SAAS,EAAE,MAAM,CAAE;EACrB,CAAC;EAED,MAAMC,WAAW,GAAG;IAClBC,KAAK,EAAE,OAAO;IAAE;IAChBC,OAAO,EAAE,MAAM;IAAE;IACjBC,eAAe,EAAE,SAAS;IAAE;IAC5BC,MAAM,EAAE,gBAAgB;IAAE;IAC1BC,YAAY,EAAE,KAAK;IAAE;IACrBP,SAAS,EAAE;EACb,CAAC;EAED,oBACEX,OAAA;IAAKmB,KAAK,EAAET,QAAS;IAAAU,QAAA,eACnBpB,OAAA;MAAQS,KAAK,EAAEL,aAAc;MAACiB,QAAQ,EAAEf,YAAa;MAACa,KAAK,EAAEN,WAAY;MAAAO,QAAA,gBACvEpB,OAAA;QAAQS,KAAK,EAAC,EAAE;QAAAW,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzCvB,QAAQ,CAACwB,GAAG,CAAEC,OAAO,iBACpB3B,OAAA;QAAyBS,KAAK,EAAEkB,OAAO,CAACC,EAAG;QAAAR,QAAA,EAAEO,OAAO,CAACE;MAAI,GAA5CF,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CA/BQF,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AAiCzB,eAAeA,gBAAgB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}