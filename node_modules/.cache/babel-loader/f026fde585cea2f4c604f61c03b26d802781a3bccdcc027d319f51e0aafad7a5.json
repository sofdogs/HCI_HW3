{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaschnurrenberger/Desktop/HCI_HW3/client/src/login-page.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './login.css';\nimport DropdownSelector from './drop-box-login';\nimport HomePage from './monitor-screen';\nimport { useNavigate } from \"react-router-dom\"; // Import useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersData = [{\n  name: 'Sara Norman',\n  id: '5344-9709',\n  doctorName: 'Dr. Jason Rosenberg',\n  doctorPhone: '579-0432',\n  glucoseLevels: {\n    low: 80,\n    high: 140\n  }\n}, {\n  name: 'Gregg Norman',\n  id: '1275-4307',\n  doctorName: 'Dr. Nikhil Singh',\n  doctorPhone: '334-2309',\n  glucoseLevels: {\n    low: 70,\n    high: 120\n  }\n}];\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const navigate = useNavigate(); // Use the useNavigate hook\n  const [selectedUserId, setSelectedUserId] = useState('');\n\n  // Dropdown selector handler\n  const handleSelectionChange = event => {\n    setSelectedUserId(event.target.value);\n  };\n\n  // Login button click handler\n  const handleLoginClick = () => {\n    const user = usersData.find(user => user.id === selectedUserId);\n    if (user) {\n      navigate('/monitor-screen', {\n        state: {\n          user\n        }\n      });\n    } else {\n      // help case \n      alert('Please select a user to login.');\n    }\n  };\n  const divStyle = {\n    textAlign: 'center',\n    // Center align the dropdown\n    marginTop: '20px' // Add some space at the top\n  };\n  const selectStyle = {\n    width: '250px',\n    // Set a specific width for the dropdown\n    padding: '10px',\n    // Add some padding inside the dropdown\n    backgroundColor: '#f1f1f1',\n    // Light grey background\n    border: '1px solid #ddd',\n    // Light grey border\n    borderRadius: '5px',\n    // Rounded corners\n    textAlign: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginpage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welc-txt\",\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-to-cont\",\n        children: \"Login to continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedUserId,\n        onChange: handleSelectionChange,\n        style: selectStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), usersData.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.id,\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: handleLoginClick,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"t3mqF1rz3q7r8mF1jY7hbxi3GHk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","DropdownSelector","HomePage","useNavigate","jsxDEV","_jsxDEV","usersData","name","id","doctorName","doctorPhone","glucoseLevels","low","high","Login","onLogin","_s","navigate","selectedUserId","setSelectedUserId","handleSelectionChange","event","target","value","handleLoginClick","user","find","state","alert","divStyle","textAlign","marginTop","selectStyle","width","padding","backgroundColor","border","borderRadius","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","style","map","onClick","_c","$RefreshReg$"],"sources":["/Users/sofiaschnurrenberger/Desktop/HCI_HW3/client/src/login-page.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './login.css'\nimport DropdownSelector from './drop-box-login'; \nimport HomePage from './monitor-screen';\n\nimport { useNavigate } from \"react-router-dom\"; // Import useHistory\nconst usersData = [\n    {\n      name: 'Sara Norman',\n      id: '5344-9709',\n      doctorName: 'Dr. Jason Rosenberg',\n      doctorPhone: '579-0432',\n      glucoseLevels: {\n        low: 80,\n        high: 140\n      }\n    },\n    {\n      name: 'Gregg Norman',\n      id: '1275-4307',\n      doctorName: 'Dr. Nikhil Singh',\n      doctorPhone: '334-2309',\n      glucoseLevels: {\n        low: 70,\n        high: 120\n      }\n    }\n  ];\n  \n  \nfunction Login({onLogin}) {\n    const navigate = useNavigate(); // Use the useNavigate hook\n    const [selectedUserId, setSelectedUserId] = useState('');\n\n    // Dropdown selector handler\n    const handleSelectionChange = (event) => {\n      setSelectedUserId(event.target.value);\n    };\n  \n    // Login button click handler\n    const handleLoginClick = () => {\n      const user = usersData.find(user => user.id === selectedUserId);\n      if (user) {\n        navigate('/monitor-screen', { state: { user } });\n      } else {\n        // help case \n        alert('Please select a user to login.');\n      }\n    };\n    const divStyle = {\n        textAlign: 'center', // Center align the dropdown\n        marginTop: '20px', // Add some space at the top\n      };\n  \n      const selectStyle = {\n        width: '250px', // Set a specific width for the dropdown\n        padding: '10px', // Add some padding inside the dropdown\n        backgroundColor: '#f1f1f1', // Light grey background\n        border: '1px solid #ddd', // Light grey border\n        borderRadius: '5px', // Rounded corners\n        textAlign: 'center',\n      };\n    \n    return (\n    <div className = \"loginpage\"> \n        <div className = \"login-box\"> \n            <p className = \"welc-txt\">Welcome</p>\n            <p className = \"login-to-cont\">Login to continue</p>\n            <select value={selectedUserId} onChange={handleSelectionChange} style={selectStyle}>\n            <option value=\"\">Select your name</option>\n            {usersData.map((user) => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n            </select>\n            <button className=\"login-btn\" onClick={handleLoginClick}>Login</button> \n        </div> \n    </div>\n    );\n}\n\nexport default Login;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}