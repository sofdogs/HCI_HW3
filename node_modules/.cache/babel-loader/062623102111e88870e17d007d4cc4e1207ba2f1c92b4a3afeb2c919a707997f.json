{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaschnurrenberger/Desktop/HCI_HW3/client/src/drop-box-login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DropdownSelector() {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(''); // Initial state is empty or your default value\n\n  // Handler for when an option is selected\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n    // You can also do other things with the selected value here\n  };\n\n  // Example inline CSS styles\n  const divStyle = {\n    textAlign: 'center',\n    // Center align the dropdown\n    marginTop: '20px' // Add some space at the top\n  };\n  const selectStyle = {\n    width: '200px',\n    // Set a specific width for the dropdown\n    padding: '10px',\n    // Add some padding inside the dropdown\n    backgroundColor: '#f1f1f1',\n    // Light grey background\n    border: '1px solid #ddd',\n    // Light grey border\n    borderRadius: '5px' // Rounded corners\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: divStyle,\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedValue,\n      onChange: handleChange,\n      style: selectStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Sara Norman\",\n        children: \"Option 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Gregg Norman\",\n        children: \"Option 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(DropdownSelector, \"jGy9vz42uNA8vwm/uxQ7PTRqf3s=\");\n_c = DropdownSelector;\nexport default DropdownSelector;\nvar _c;\n$RefreshReg$(_c, \"DropdownSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DropdownSelector","_s","selectedValue","setSelectedValue","handleChange","event","target","value","divStyle","textAlign","marginTop","selectStyle","width","padding","backgroundColor","border","borderRadius","style","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sofiaschnurrenberger/Desktop/HCI_HW3/client/src/drop-box-login.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction DropdownSelector() {\n  const [selectedValue, setSelectedValue] = useState(''); // Initial state is empty or your default value\n\n  // Handler for when an option is selected\n  const handleChange = (event) => {\n    setSelectedValue(event.target.value);\n    // You can also do other things with the selected value here\n  };\n\n  // Example inline CSS styles\n  const divStyle = {\n    textAlign: 'center', // Center align the dropdown\n    marginTop: '20px', // Add some space at the top\n  };\n\n  const selectStyle = {\n    width: '200px', // Set a specific width for the dropdown\n    padding: '10px', // Add some padding inside the dropdown\n    backgroundColor: '#f1f1f1', // Light grey background\n    border: '1px solid #ddd', // Light grey border\n    borderRadius: '5px', // Rounded corners\n  };\n\n  return (\n    <div style={divStyle}>\n      <select value={selectedValue} onChange={handleChange} style={selectStyle}>\n        <option value=\"\">Select an option</option> {/* Placeholder option */}\n        <option value=\"Sara Norman\">Option 1</option>\n        <option value=\"Gregg Norman\">Option 2</option>\n        {/* Add more options as needed */}\n      </select>\n    </div>\n  );\n}\n\nexport default DropdownSelector;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC9BF,gBAAgB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG;IACfC,SAAS,EAAE,QAAQ;IAAE;IACrBC,SAAS,EAAE,MAAM,CAAE;EACrB,CAAC;EAED,MAAMC,WAAW,GAAG;IAClBC,KAAK,EAAE,OAAO;IAAE;IAChBC,OAAO,EAAE,MAAM;IAAE;IACjBC,eAAe,EAAE,SAAS;IAAE;IAC5BC,MAAM,EAAE,gBAAgB;IAAE;IAC1BC,YAAY,EAAE,KAAK,CAAE;EACvB,CAAC;EAED,oBACEjB,OAAA;IAAKkB,KAAK,EAAET,QAAS;IAAAU,QAAA,eACnBnB,OAAA;MAAQQ,KAAK,EAAEL,aAAc;MAACiB,QAAQ,EAAEf,YAAa;MAACa,KAAK,EAAEN,WAAY;MAAAO,QAAA,gBACvEnB,OAAA;QAAQQ,KAAK,EAAC,EAAE;QAAAW,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,eAC3CxB,OAAA;QAAQQ,KAAK,EAAC,aAAa;QAAAW,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7CxB,OAAA;QAAQQ,KAAK,EAAC,cAAc;QAAAW,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CAjCQD,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AAmCzB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}