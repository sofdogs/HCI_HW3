{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaschnurrenberger/Desktop/HCI_HW3/client/src/login-page.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './login.css';\nimport HomePage from './monitor-screen';\nimport { useNavigate } from \"react-router-dom\"; // Import useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersData = [{\n  name: 'Sara Norman',\n  id: '5344-9709',\n  doctorName: 'Dr. Jason Rosenberg',\n  doctorPhone: '579-0432',\n  glucoseLevels: {\n    low: 80,\n    high: 140\n  }\n}, {\n  name: 'Gregg Norman',\n  id: '1275-4307',\n  doctorName: 'Dr. Nikhil Singh',\n  doctorPhone: '334-2309',\n  glucoseLevels: {\n    low: 70,\n    high: 120\n  }\n}];\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const navigate = useNavigate(); // Use the useNavigate hook\n  const [selectedUserId, setSelectedUserId] = useState('');\n\n  // Dropdown selector handler\n  const handleSelectionChange = event => {\n    setSelectedUserId(event.target.value);\n  };\n  const [showHelp, setShowHelp] = useState(false);\n\n  // Toggle the display of help information\n  const toggleHelp = () => {\n    setShowHelp(!showHelp);\n  };\n  const HelpLog = () => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-information\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Help Information:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"To log in, please press the \\\"select your name\\\" box and click on your name. Then press the \\\"Login\\\" button below. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"This will redirect you to the Blood Monitor System.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  };\n\n  // Login button click handler\n  const handleLoginClick = () => {\n    const user = usersData.find(user => user.id === selectedUserId);\n    if (user) {\n      navigate('/monitor-screen', {\n        state: {\n          user\n        }\n      });\n    } else {\n      // help case \n      alert('Please select a user to login.');\n    }\n  };\n  const divStyle = {\n    textAlign: 'center',\n    // Center align the dropdown\n    marginTop: '20px' // Add some space at the top\n  };\n  const selectStyle = {\n    width: '250px',\n    // Set a specific width for the dropdown\n    padding: '10px',\n    // Add some padding inside the dropdown\n    backgroundColor: '#f1f1f1',\n    // Light grey background\n    border: '1px solid #ddd',\n    // Light grey border\n    borderRadius: '5px',\n    // Rounded corners\n    textAlign: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginpage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welc-txt\",\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-to-cont\",\n        children: \"Login to continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedUserId,\n          onChange: handleSelectionChange,\n          style: selectStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), usersData.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.id,\n            children: user.name\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: handleLoginClick,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"help-btn\",\n        onClick: toggleHelp,\n        children: showHelp ? 'Hide Help' : 'Show Help'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), showHelp && /*#__PURE__*/_jsxDEV(HelpLog, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"7PkrnXAk6KPB8mT3V/nuVQ8FIxo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","HomePage","useNavigate","jsxDEV","_jsxDEV","usersData","name","id","doctorName","doctorPhone","glucoseLevels","low","high","Login","onLogin","_s","navigate","selectedUserId","setSelectedUserId","handleSelectionChange","event","target","value","showHelp","setShowHelp","toggleHelp","HelpLog","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleLoginClick","user","find","state","alert","divStyle","textAlign","marginTop","selectStyle","width","padding","backgroundColor","border","borderRadius","style","onChange","map","onClick","_c","$RefreshReg$"],"sources":["/Users/sofiaschnurrenberger/Desktop/HCI_HW3/client/src/login-page.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './login.css'\nimport HomePage from './monitor-screen';\n\nimport { useNavigate } from \"react-router-dom\"; // Import useHistory\nconst usersData = [\n    {\n      name: 'Sara Norman',\n      id: '5344-9709',\n      doctorName: 'Dr. Jason Rosenberg',\n      doctorPhone: '579-0432',\n      glucoseLevels: {\n        low: 80,\n        high: 140\n      }\n    },\n    {\n      name: 'Gregg Norman',\n      id: '1275-4307',\n      doctorName: 'Dr. Nikhil Singh',\n      doctorPhone: '334-2309',\n      glucoseLevels: {\n        low: 70,\n        high: 120\n      }\n    }\n  ];\n  \nfunction Login({onLogin}) {\n    const navigate = useNavigate(); // Use the useNavigate hook\n    const [selectedUserId, setSelectedUserId] = useState('');\n\n    // Dropdown selector handler\n    const handleSelectionChange = (event) => {\n      setSelectedUserId(event.target.value);\n    };\n\n    const [showHelp, setShowHelp] = useState(false);\n\n    // Toggle the display of help information\n    const toggleHelp = () => {\n        setShowHelp(!showHelp);\n    };\n\n    const HelpLog = () => { \n        <div className=\"help-information\">\n        <p>Help Information:</p>\n        <ul>\n            <li>To log in, please press the \"select your name\" box and click on your name. Then press the \"Login\" button below. </li> \n            <li>This will redirect you to the Blood Monitor System.</li>\n        </ul>\n        </div>\n    };\n  \n    // Login button click handler\n    const handleLoginClick = () => {\n      const user = usersData.find(user => user.id === selectedUserId);\n      if (user) {\n        navigate('/monitor-screen', { state: { user } });\n      } else {\n        // help case \n        alert('Please select a user to login.');\n      }\n    };\n    const divStyle = {\n        textAlign: 'center', // Center align the dropdown\n        marginTop: '20px', // Add some space at the top\n      };\n  \n      const selectStyle = {\n        width: '250px', // Set a specific width for the dropdown\n        padding: '10px', // Add some padding inside the dropdown\n        backgroundColor: '#f1f1f1', // Light grey background\n        border: '1px solid #ddd', // Light grey border\n        borderRadius: '5px', // Rounded corners\n        textAlign: 'center',\n      };\n    \n    return (\n    <div className = \"loginpage\"> \n        <div className = \"login-box\"> \n            <p className = \"welc-txt\">Welcome</p>\n            <p className = \"login-to-cont\">Login to continue</p>\n            <div style={divStyle}>\n                <select value={selectedUserId} onChange={handleSelectionChange} style={selectStyle}>\n                <option value=\"\">Select your name</option>\n                {usersData.map((user) => (\n                    <option key={user.id} value={user.id}>{user.name}</option>\n                ))}\n                </select>\n            </div>\n            <button className=\"login-btn\" onClick={handleLoginClick}>Login</button>\n            <button className=\"help-btn\" onClick={toggleHelp}>\n                        {showHelp ? 'Hide Help' : 'Show Help'}\n            </button>\n            {showHelp && <HelpLog />} \n        </div> \n    </div>\n    );\n}\n\nexport default Login;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}